#include <iostream>
using namespace std;
int partition(int arr[], int begin, int finish)
{
	int pivot = arr[begin];
	int count = 0;
	for (int i = begin + 1; i <= finish; i++) {
		if (arr[i] <= pivot)
			count++;
	}
	int pivotIndex = begin + count;
	swap(arr[pivotIndex], arr[begin]);
	int i = begin, j = finish;
	while (i < pivotIndex && j > pivotIndex) {
		while (arr[i] <= pivot) {
			i++;
		}
		while (arr[j] > pivot) {
			j--;
		}
		if (i < pivotIndex && j > pivotIndex) {
			swap(arr[i++], arr[j--]);
		}
	}
	return pivotIndex;
}
void quickSort(int arr[], int begin, int finish)
{
	if (begin >= finish)
		return;	
	int p = partition(arr, begin, finish);
	quickSort(arr, begin, p - 1);
	quickSort(arr, p + 1, finish);
}
int main()
{
	int arr[] = {9,3,4,2,1,6,8,5,7};
	int n = 9;
	quickSort(arr, 0, n - 1);
	for (int i = 0; i < n; i++) {
		cout << arr[i] << " ";
	}
	return 0;
}
